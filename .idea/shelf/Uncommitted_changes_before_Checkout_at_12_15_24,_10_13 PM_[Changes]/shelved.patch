Index: src/test/java/bilira/utilities/GmailQuickstart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bilira.utilities;\n\nimport com.google.api.client.auth.oauth2.Credential;\nimport com.google.api.client.extensions.java6.auth.oauth2.AuthorizationCodeInstalledApp;\nimport com.google.api.client.extensions.jetty.auth.oauth2.LocalServerReceiver;\nimport com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;\nimport com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets;\nimport com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;\nimport com.google.api.client.http.javanet.NetHttpTransport;\nimport com.google.api.client.json.JsonFactory;\nimport com.google.api.client.json.gson.GsonFactory;\nimport com.google.api.client.util.store.FileDataStoreFactory;\nimport com.google.api.services.gmail.Gmail;\nimport com.google.api.services.gmail.GmailScopes;\nimport com.google.api.services.gmail.model.ListMessagesResponse;\nimport com.google.api.services.gmail.model.Message;\nimport org.apache.commons.codec.binary.Base64;\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\n\nimport javax.mail.*;\nimport javax.mail.internet.MimeMessage;\nimport javax.mail.internet.MimeMultipart;\nimport java.io.*;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.security.GeneralSecurityException;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Properties;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class GmailQuickstart {\n\n    private static final String APPLICATION_NAME = \"MailProject\";\n    private static final JsonFactory JSON_FACTORY = GsonFactory.getDefaultInstance();\n    private static final String TOKENS_DIRECTORY_PATH = \"Tokens/ReceiveTokens\";\n    private static final String user = \"qatester1532@gmail.com\";\n\n    // 6 haneli sayıyı saklamak için sınıf değişkeni\n    private String digit;\n\n    public String getDigit() {\n        return digit; // Getter metodu ile erişim sağlanır\n    }\n\n    public void setDigit(String digit) {\n        this.digit = digit; // Setter metodu ile değer ataması yapılır\n    }\n\n    private static final List<String> SCOPES = Collections.singletonList(GmailScopes.GMAIL_READONLY);\n    private static final String CREDENTIALS_FILE_PATH = \"/test.json\";\n\n    private static Credential getCredentials(final NetHttpTransport HTTP_TRANSPORT) throws IOException {\n        InputStream in = GmailQuickstart.class.getResourceAsStream(CREDENTIALS_FILE_PATH);\n        if (in == null) {\n            throw new FileNotFoundException(\"Resource not found: \" + CREDENTIALS_FILE_PATH);\n        }\n        GoogleClientSecrets clientSecrets = GoogleClientSecrets.load(JSON_FACTORY, new InputStreamReader(in));\n        GoogleAuthorizationCodeFlow flow = new GoogleAuthorizationCodeFlow.Builder(\n                HTTP_TRANSPORT, JSON_FACTORY, clientSecrets, SCOPES)\n                .setDataStoreFactory(new FileDataStoreFactory(new java.io.File(TOKENS_DIRECTORY_PATH)))\n                .setAccessType(\"offline\")\n                .build();\n        LocalServerReceiver receiver = new LocalServerReceiver.Builder().setPort(8888).build();\n        return new AuthorizationCodeInstalledApp(flow, receiver).authorize(\"user\");\n    }\n\n    public void fetchDigitFromGmail() throws IOException, GeneralSecurityException, MessagingException {\n        final NetHttpTransport HTTP_TRANSPORT = GoogleNetHttpTransport.newTrustedTransport();\n        Gmail service = new Gmail.Builder(HTTP_TRANSPORT, JSON_FACTORY, getCredentials(HTTP_TRANSPORT))\n                .setApplicationName(APPLICATION_NAME)\n                .build();\n\n        // Kullanıcının mesajlarını listeleme\n        ListMessagesResponse messagesResponse = service.users().messages().list(user).setMaxResults(1L).execute();\n        List<Message> messages = messagesResponse.getMessages();\n\n        if (messages == null || messages.isEmpty()) {\n            System.out.println(\"Hiç mesaj bulunamadı.\");\n        } else {\n            String messageId = messages.get(0).getId();\n            Message message = service.users().messages().get(user, messageId).setFormat(\"raw\").execute();\n\n            // Mesaj içeriğini çözümleme\n            byte[] emailBytes = Base64.decodeBase64(message.getRaw());\n            Properties props = new Properties();\n            Session session = Session.getDefaultInstance(props, null);\n            MimeMessage email = new MimeMessage(session, new ByteArrayInputStream(emailBytes));\n\n            // Mesajın içeriğini al\n            String content = extractMessageContent(email);\n\n            // 6 haneli sayıyı regex ile bul\n            String sixDigitCode = extractSixDigitCodeFromHTML(content);\n\n            // Sınıf değişkenine atama\n            setDigit(sixDigitCode); // sınıf değişkenine atama\n        }\n    }\n\n    private static String extractSixDigitCodeFromHTML(String content) {\n        // HTML içeriği çözümleme\n        Document doc = Jsoup.parse(content);\n\n        // <span> veya <p> gibi etiketlerde sayıyı arıyoruz\n        for (Element element : doc.select(\"span, p\")) {\n            String text = element.text();\n            // Regex ile 6 haneli sayıyı arıyoruz\n            Pattern pattern = Pattern.compile(\"\\\\b\\\\d{6}\\\\b\");\n            Matcher matcher = pattern.matcher(text);\n            if (matcher.find()) {\n                return matcher.group(); // Bulunan ilk 6 haneli sayıyı döndür\n            }\n        }\n        return null;\n    }\n\n    private static String extractMessageContent(MimeMessage email) throws MessagingException, IOException {\n        Object content = email.getContent();\n\n        if (content instanceof String) {\n            // Eğer içerik düz metinse doğrudan döner\n            return (String) content;\n        } else if (content instanceof MimeMultipart) {\n            // Eğer içerik multipart (HTML) ise, düz metin kısmını çıkar\n            MimeMultipart multipart = (MimeMultipart) content;\n            return getTextFromMimeMultipart(multipart);\n        }\n\n        return \"\"; // İçerik alınamıyorsa boş string döner\n    }\n\n    private static String getTextFromMimeMultipart(MimeMultipart multipart) throws MessagingException, IOException {\n        StringBuilder result = new StringBuilder();\n        for (int i = 0; i < multipart.getCount(); i++) {\n            BodyPart bodyPart = multipart.getBodyPart(i);\n            if (bodyPart.isMimeType(\"text/plain\")) {\n                result.append(bodyPart.getContent().toString());\n            } else if (bodyPart.isMimeType(\"text/html\")) {\n                // HTML içeriğini de işleyelim\n                result.append(bodyPart.getContent().toString());\n            }\n        }\n        return result.toString();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/bilira/utilities/GmailQuickstart.java b/src/test/java/bilira/utilities/GmailQuickstart.java
--- a/src/test/java/bilira/utilities/GmailQuickstart.java	(revision 35c8566a8eaa05ca90a70ee9eb2e412b1fb3cc24)
+++ b/src/test/java/bilira/utilities/GmailQuickstart.java	(date 1734284982299)
@@ -23,8 +23,6 @@
 import javax.mail.internet.MimeMessage;
 import javax.mail.internet.MimeMultipart;
 import java.io.*;
-import java.nio.file.Files;
-import java.nio.file.Paths;
 import java.security.GeneralSecurityException;
 import java.util.Collections;
 import java.util.List;
@@ -36,38 +34,22 @@
 
     private static final String APPLICATION_NAME = "MailProject";
     private static final JsonFactory JSON_FACTORY = GsonFactory.getDefaultInstance();
-    private static final String TOKENS_DIRECTORY_PATH = "Tokens/ReceiveTokens";
-    private static final String user = "qatester1532@gmail.com";
+    private String tokensDirectoryPath;
+    private String user;
+    private String credentialsFilePath;
 
-    // 6 haneli sayıyı saklamak için sınıf değişkeni
-    private String digit;
+    private String digit; // 6 haneli sayıyı saklamak için sınıf değişkeni
+
+    public GmailQuickstart(String user, String tokensDirectoryPath, String credentialsFilePath) {
+        this.user = user;
+        this.tokensDirectoryPath = tokensDirectoryPath;
+        this.credentialsFilePath = credentialsFilePath;
+    }
 
     public String getDigit() {
         return digit; // Getter metodu ile erişim sağlanır
     }
 
-    public void setDigit(String digit) {
-        this.digit = digit; // Setter metodu ile değer ataması yapılır
-    }
-
-    private static final List<String> SCOPES = Collections.singletonList(GmailScopes.GMAIL_READONLY);
-    private static final String CREDENTIALS_FILE_PATH = "/test.json";
-
-    private static Credential getCredentials(final NetHttpTransport HTTP_TRANSPORT) throws IOException {
-        InputStream in = GmailQuickstart.class.getResourceAsStream(CREDENTIALS_FILE_PATH);
-        if (in == null) {
-            throw new FileNotFoundException("Resource not found: " + CREDENTIALS_FILE_PATH);
-        }
-        GoogleClientSecrets clientSecrets = GoogleClientSecrets.load(JSON_FACTORY, new InputStreamReader(in));
-        GoogleAuthorizationCodeFlow flow = new GoogleAuthorizationCodeFlow.Builder(
-                HTTP_TRANSPORT, JSON_FACTORY, clientSecrets, SCOPES)
-                .setDataStoreFactory(new FileDataStoreFactory(new java.io.File(TOKENS_DIRECTORY_PATH)))
-                .setAccessType("offline")
-                .build();
-        LocalServerReceiver receiver = new LocalServerReceiver.Builder().setPort(8888).build();
-        return new AuthorizationCodeInstalledApp(flow, receiver).authorize("user");
-    }
-
     public void fetchDigitFromGmail() throws IOException, GeneralSecurityException, MessagingException {
         final NetHttpTransport HTTP_TRANSPORT = GoogleNetHttpTransport.newTrustedTransport();
         Gmail service = new Gmail.Builder(HTTP_TRANSPORT, JSON_FACTORY, getCredentials(HTTP_TRANSPORT))
@@ -97,9 +79,25 @@
             String sixDigitCode = extractSixDigitCodeFromHTML(content);
 
             // Sınıf değişkenine atama
-            setDigit(sixDigitCode); // sınıf değişkenine atama
+            digit = sixDigitCode;
         }
     }
+
+    private Credential getCredentials(final NetHttpTransport HTTP_TRANSPORT) throws IOException {
+        InputStream in = new FileInputStream(this.credentialsFilePath);
+        if (in == null) {
+            throw new FileNotFoundException("Credential file not found: " + this.credentialsFilePath);
+        }
+        GoogleClientSecrets clientSecrets = GoogleClientSecrets.load(JSON_FACTORY, new InputStreamReader(in));
+
+        GoogleAuthorizationCodeFlow flow = new GoogleAuthorizationCodeFlow.Builder(
+                HTTP_TRANSPORT, JSON_FACTORY, clientSecrets, Collections.singletonList(GmailScopes.GMAIL_READONLY))
+                .setDataStoreFactory(new FileDataStoreFactory(new File(this.tokensDirectoryPath)))
+                .setAccessType("offline")
+                .build();
+        LocalServerReceiver receiver = new LocalServerReceiver.Builder().setPort(8888).build();
+        return new AuthorizationCodeInstalledApp(flow, receiver).authorize("user");
+    }
 
     private static String extractSixDigitCodeFromHTML(String content) {
         // HTML içeriği çözümleme
@@ -146,4 +144,17 @@
         }
         return result.toString();
     }
+
+    public static void main(String[] args) throws IOException, GeneralSecurityException, MessagingException {
+        // Kullanıcı, token dizini ve credential dosyası bilgilerini sağlayın
+        GmailQuickstart gmailQuickstart = new GmailQuickstart(
+                "farkli.kullanici@gmail.com", // E-posta adresi
+                "Tokens/DifferentUserTokens", // Tokenlerin saklandığı dizin
+                "path/to/another_credentials.json" // Credential dosyasının yolu
+        );
+
+        // Mesajlardan 6 haneli kodu çek
+        gmailQuickstart.fetchDigitFromGmail();
+        System.out.println("6 Haneli Kod: " + gmailQuickstart.getDigit());
+    }
 }
Index: configuration.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nbrowser=chrome\nUrl= https://kripto.bilira.co//\n\n#email = yusuf.66.77@gmail.com\n#password = Asd+1234\n#phone = 05419539727\n\n\nemail = livdemirci@gmail.com\npassword = Anka1968.,\nphone = 05419539727\n\n\nemail2 = qatester1532@gmail.com\npassword2 = 3ZE9tj7miEJR@Qg\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/configuration.properties b/configuration.properties
--- a/configuration.properties	(revision 35c8566a8eaa05ca90a70ee9eb2e412b1fb3cc24)
+++ b/configuration.properties	(date 1734289812731)
@@ -7,10 +7,17 @@
 #phone = 05419539727
 
 
-email = livdemirci@gmail.com
-password = Anka1968.,
-phone = 05419539727
-
+#email = livdemirci@gmail.com
+#password = Anka1968.,
+#phone = 05419539727
+#
 
 email2 = qatester1532@gmail.com
 password2 = 3ZE9tj7miEJR@Qg
+
+#email2 = testquality1tester@gmail.com
+#password2 = Test.123456
+
+#tokenDirectoryPath=Tokens/Mustafa
+#jsonDirectoryPath=src/test/resources/mustafa.json
+
Index: src/test/java/bilira/step_definitions/Swap_StepDefinitions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bilira.step_definitions;\n\nimport bilira.pages.Swap_Pages;\nimport bilira.utilities.*;\nimport io.cucumber.java.en.And;\nimport io.cucumber.java.en.Given;\nimport io.cucumber.java.en.Then;\nimport io.cucumber.java.en.When;\nimport org.junit.Assert;\nimport org.openqa.selenium.JavascriptExecutor;\n\nimport javax.mail.MessagingException;\nimport java.io.IOException;\nimport java.security.GeneralSecurityException;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Swap_StepDefinitions {\n    Swap_Pages swapPages = new Swap_Pages();\n    String amaunt;\n\n    @Given(\"The user goes to the url.\")\n    public void theUserGoesToTheUrl() {\n        Driver.getDriver().get(ConfigReader.getProperty(\"Url\"));\n        ReusableMethods.screenShot(\"sc\");\n    }\n\n\n    @When(\"The user accepts the cookie on the page.\")\n    public void theUserAcceptsTheCookieOnThePage() throws MessagingException, GeneralSecurityException, IOException {\n\n\n        swapPages.acceptCookies();\n    }\n\n    @And(\"User clicks the login button\")\n    public void userClicksTheLoginButton() {\n        String url = swapPages.loginButton.getAttribute(\"href\");\n        ((JavascriptExecutor) Driver.getDriver()).executeScript(\"window.open(arguments[0], '_blank');\", url);\n\n        // Switch to the new tab (assumes second tab)\n        for (String handle : Driver.getDriver().getWindowHandles()) {\n            Driver.getDriver().switchTo().window(handle);\n        }\n    }\n\n\n    @And(\"The user enters the e-mail address registered in the system.\")\n    public void theUserEntersTheEMailAddressRegisteredInTheSystem() {\n\n        swapPages.enterEmail(ConfigReader.getProperty(\"email\"));\n        ReusableMethods.bekle(1);\n    }\n\n    @And(\"The user enters the password registered in the system.\")\n    public void theUserEntersThePasswordRegisteredInTheSystem() {\n        swapPages.enterPassword(ConfigReader.getProperty(\"password\"));\n    }\n\n    @And(\"The user clicks the login button.\")\n    public void theUserClicksTheLoginButton() {\n        swapPages.submitLogin();\n    }\n\n    @And(\"User enters sms verification code\")\n    public void userEntersSmsVerificationCode() {\n        swapPages.otpInputClick();\n        ReusableMethods.bekle(15);\n        //  swapPages.enterOtp(\"\");\n    }\n\n    @And(\"Clicks the Send button\")\n    public void clicksTheSendButton() {\n        swapPages.submitOtp();\n    }\n\n    @And(\"User clicks on the search transaction pair box on the opened page\")\n    public void userClicksOnTheSearchTransactionPairBoxOnTheOpenedPage() {\n//        Ve Kullanıcı açılan sayfada işlem çiftini arama kutusuna tıklar\n\n        ReusableMethods.screenShot(\"HomePage\");\n        swapPages.searchCoinClick();\n    }\n\n    @And(\"Type the cryptocurrency to swap into the search box\")\n    public void typeTheCryptocurrencyToSwapIntoTheSearchBox() {\n//           Ve Kullanıcı arama kutusuna takas yapmak istediği kripto para birimini yazar.\n        swapPages.coinSearcInput(\"USDT\");\n        ReusableMethods.bekle(2);\n    }\n\n    @And(\"The user clicks on the cryptocurrency to trade.\")\n    public void theUserClicksOnTheCryptocurrencyToTrade() {\n//        Ve Kullanıcı işlem yapmak istediği kripto para birimine tıklar\n        swapPages.selectCoin();\n        ReusableMethods.bekle(2);\n    }\n\n    @And(\"The user clicks on the dropdown in the swap section of the cryptocurrency detail page.\")\n    public void theUserClicksOnTheDropdownInTheSwapSectionOfTheCryptocurrencyDetailPage() {\n//        Ve Kullanıcı kripto para detay sayfasındaki takas bölümünde açılır menüye tıklar.\n        swapPages.selectSwapPair();\n        ReusableMethods.bekle(2);\n    }\n\n    @And(\"The user selects USDT from the box at the top of the cryptocurrency list\")\n    public void theUserSelectsUSDTFromTheBoxAtTheTopOfTheCryptocurrencyList() {\n//        Ve Kullanıcı kripto para listesinin üst kısmındaki kutudan USDT'yi seçer.\n        swapPages.selectUsdtSwap();\n        ReusableMethods.bekle(2);\n    }\n\n    @And(\"User types BTC in the asset search box\")\n    public void userTypesBTCInTheAssetSearchBox() {\n//        Ve Kullanıcı varlık arama kutusuna BTC yazar.\n        swapPages.coinSearcInput(\"BTC\");\n        ReusableMethods.bekle(2);\n    }\n\n\n    @And(\"User clicks on BTC-USTD swap in the incoming table\")\n    public void userClicksOnBTCUSTDSwapInTheIncomingTable() {\n//        # Ve Kullanıcı gelen tabloda BTC-USDT takasına tıklar.\n        swapPages.selectAssetBox();\n        ReusableMethods.bekle(2);\n    }\n\n    @Then(\"The user verifies that the trading pairs to be swapped are BTC-USDT\")\n    public void theUserVerifiesThatTheTradingPairsToBeSwappedAreBTCUSDT() {\n//        Ardından Kullanıcı takas yapılacak işlem çiftlerinin BTC-USDT olduğunu doğrular.\n        String usdtText = swapPages.getUsdtText();\n        String btcText = swapPages.getBtcText();\n        Assert.assertEquals(\"Bitcoin\", btcText);\n        Assert.assertEquals(\"USDT\", usdtText);\n    }\n\n    @When(\"The user enters the amount of money they want to exchange into the calculator\")\n    public void theUserEntersTheAmountOfMoneyTheyWantToExchangeIntoTheCalculator() {\n//        # Ne zaman Kullanıcı takas etmek istediği para miktarını hesaplayıcıya girer.\n        amaunt = \"100\";\n\n        swapPages.enterAmount(\"100\");\n    }\n\n    @Then(\"The user verifies that the amount entered in the calculator is displayed\")\n    public void theUserVerifiesThatTheAmountEnteredInTheCalculatorIsDisplayed() {\n//        # Ardından Kullanıcı hesaplayıcıya girilen miktarın görüntülendiğini doğrular.\n        String amauntText = swapPages.getAmauntText();\n        Assert.assertEquals(amaunt, amauntText);\n        ReusableMethods.screenShot(\"EnterAmount\");\n    }\n\n    @And(\"The user validates the value of the approximate amount they want to swap using the approximate price information displayed on the ui\")\n    public void theUserValidatesTheValueOfTheApproximateAmountTheyWantToSwapUsingTheApproximatePriceInformationDisplayedOnTheUi() {\n//        # Ve Kullanıcı yaklaşık fiyat bilgisiyle gösterilen yaklaşık takas miktarını doğrular.\n        Double amaunt = Double.parseDouble(this.amaunt);\n        String btcUsdtRateText = swapPages.getBtcUsdtRateText();\n\n\n        Pattern pattern = Pattern.compile(\"1 BTC = ([\\\\d.,]+)\");\n        Matcher matcher = pattern.matcher(btcUsdtRateText);\n\n        double btc_usdt_value;\n        if (matcher.find()) {\n            String value = matcher.group(1)\n                    .replace(\".\", \"\")\n                    .replace(\",\", \".\");\n            btc_usdt_value = Double.parseDouble(value);\n            System.out.println(\"BTC/USDT Value: \" + btc_usdt_value);\n        } else {\n            throw new IllegalStateException(\"BTC/USDT rate not found in text: \" + btcUsdtRateText);\n        }\n\n        Double approximateAmaunt = amaunt / btc_usdt_value;\n        System.out.println(\"approximateAmaunt = \" + approximateAmaunt);\n        String approximateValueUI = swapPages.getApproximateValueUI();\n\n        Pattern pattern2 = Pattern.compile(\"([\\\\d,\\\\.]+)\");\n        Matcher matcher2 = pattern2.matcher(approximateValueUI);\n\n        double numericValue;\n        if (matcher2.find()) {\n            String matchedValue = matcher2.group(1);\n            String formattedValue = matchedValue.replace(\",\", \".\");\n            numericValue = Double.parseDouble(formattedValue);\n            System.out.println(\"Yaklaşık Değer (UI): \" + numericValue);\n        } else {\n            throw new IllegalStateException(\"Approximate value not found in text: \" + approximateValueUI);\n        }\n//        ReusableMethods.screenShot(\"AmountAssertion\");\n        Assert.assertEquals(approximateAmaunt, numericValue, 0.0000001);\n\n\n    }\n\n\n    @Then(\"User confirms that the buy text is clickable\")\n    public void userConfirmsThatTheBuyTextIsClickable() {\n        boolean displayed = swapPages.buyBtcButton.isDisplayed();\n        Assert.assertTrue(displayed);\n\n    }\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @And(\"Users enters mail verification code\")\n    public void usersEntersMailVerificationCode() throws MessagingException, GeneralSecurityException, IOException {\n        ReusableMethods.bekle(5);\n        GmailQuickstart gmailQuickstart = new GmailQuickstart();\n\n        // Gmail'den digit değerini almak için öncelikle fetch metodunu çağır\n        gmailQuickstart.fetchDigitFromGmail();\n\n        // Şimdi digit değerini alabiliriz\n        String digitValue = gmailQuickstart.getDigit();\n\n        // Değeri yazdır\n        System.out.println(\"Alınan digit değeri: \" + digitValue);\n\n        swapPages.enterDigitOtp(digitValue);\n\n\n    }\n\n    @And(\"User clicks phone add button\")\n    public void userClicksPhoneAddButton() {\n        swapPages.phoneAddButtonClick();\n    }\n\n    @And(\"User clicks skip button\")\n    public void userClicksSkipButton() {\n        swapPages.skipButtonClick();\n    }\n\n    @And(\"The user enters the e-mail address registered in the system for e-mail otp.\")\n    public void theUserEntersTheEMailAddressRegisteredInTheSystemForEMailOtp() {\n        swapPages.enterEmail(ConfigReader.getProperty(\"email2\"));\n        ReusableMethods.bekle(1);\n    }\n\n    @And(\"The user enters the password registered in the system for e-mail otp.\")\n    public void theUserEntersThePasswordRegisteredInTheSystemForEMailOtp() {\n        swapPages.enterPassword(ConfigReader.getProperty(\"password2\"));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/bilira/step_definitions/Swap_StepDefinitions.java b/src/test/java/bilira/step_definitions/Swap_StepDefinitions.java
--- a/src/test/java/bilira/step_definitions/Swap_StepDefinitions.java	(revision 35c8566a8eaa05ca90a70ee9eb2e412b1fb3cc24)
+++ b/src/test/java/bilira/step_definitions/Swap_StepDefinitions.java	(date 1734286543185)
@@ -204,12 +204,14 @@
 
     @And("Users enters mail verification code")
     public void usersEntersMailVerificationCode() throws MessagingException, GeneralSecurityException, IOException {
-        ReusableMethods.bekle(5);
-        GmailQuickstart gmailQuickstart = new GmailQuickstart();
-
-        // Gmail'den digit değerini almak için öncelikle fetch metodunu çağır
+                GmailQuickstart gmailQuickstart = new GmailQuickstart(
+                ConfigReader.getProperty("email2"),
+                "Tokens/Mustafa",
+                "src/test/resources/mustafa.json"
+        );
+        ReusableMethods.bekle(10);
+        // Mesajlardan 6 haneli kodu çek
         gmailQuickstart.fetchDigitFromGmail();
-
         // Şimdi digit değerini alabiliriz
         String digitValue = gmailQuickstart.getDigit();
 
Index: src/test/java/bilira/utilities/ManuelMail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bilira.utilities;\n\nimport javax.mail.MessagingException;\nimport java.io.IOException;\nimport java.security.GeneralSecurityException;\n\npublic class ManuelMail {\n\n    public static void main(String[] args) throws MessagingException, GeneralSecurityException, IOException {\n        GmailQuickstart gmailQuickstart = new GmailQuickstart();\n\n        // Gmail'den digit değerini almak için öncelikle fetch metodunu çağır\n        gmailQuickstart.fetchDigitFromGmail();\n        String digitValue = gmailQuickstart.getDigit();\n\n        // Değeri yazdır\n        System.out.println(\"Alınan digit değeri: \" + digitValue);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/bilira/utilities/ManuelMail.java b/src/test/java/bilira/utilities/ManuelMail.java
--- a/src/test/java/bilira/utilities/ManuelMail.java	(revision 35c8566a8eaa05ca90a70ee9eb2e412b1fb3cc24)
+++ b/src/test/java/bilira/utilities/ManuelMail.java	(date 1734285528703)
@@ -7,13 +7,16 @@
 public class ManuelMail {
 
     public static void main(String[] args) throws MessagingException, GeneralSecurityException, IOException {
-        GmailQuickstart gmailQuickstart = new GmailQuickstart();
+        GmailQuickstart gmailQuickstart = new GmailQuickstart(
+                "testquality1tester@gmail.com",
+                "Tokens/Mustafa",
+                "src/test/resources/mustafa.json"
+        );
 
-        // Gmail'den digit değerini almak için öncelikle fetch metodunu çağır
+        // Mesajlardan 6 haneli kodu çek
         gmailQuickstart.fetchDigitFromGmail();
+        // Şimdi digit değerini alabiliriz
         String digitValue = gmailQuickstart.getDigit();
-
-        // Değeri yazdır
-        System.out.println("Alınan digit değeri: " + digitValue);
+        System.out.println("digitValue = " + digitValue);
     }
 }
Index: src/test/resources/mustafa.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"installed\":{\"client_id\":\"788634064243-tu6htssgena0dkh0qh42sqegh2jlbj70.apps.googleusercontent.com\",\"project_id\":\"mailproject-444812\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_secret\":\"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\",\"redirect_uris\":[\"http://localhost\"]}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/mustafa.json b/src/test/resources/mustafa.json
--- a/src/test/resources/mustafa.json	(revision 35c8566a8eaa05ca90a70ee9eb2e412b1fb3cc24)
+++ b/src/test/resources/mustafa.json	(date 1734285471135)
@@ -1,1 +1,13 @@
-{"installed":{"client_id":"788634064243-tu6htssgena0dkh0qh42sqegh2jlbj70.apps.googleusercontent.com","project_id":"mailproject-444812","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"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","redirect_uris":["http://localhost"]}}
\ No newline at end of file
+{
+  "installed": {
+    "client_id": "788634064243-tu6htssgena0dkh0qh42sqegh2jlbj70.apps.googleusercontent.com",
+    "project_id": "mailproject-444812",
+    "auth_uri": "https://accounts.google.com/o/oauth2/auth",
+    "token_uri": "https://oauth2.googleapis.com/token",
+    "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
+    "client_secret": "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",
+    "redirect_uris": [
+      "http://localhost"
+    ]
+  }
+}
\ No newline at end of file
Index: target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@swap\nFeature:Validate that a swap of USDT to BTC is executed successfully, with real-time rates displayed before confirmation\n  Scenario:Swap of USDT to BTC\n    Given The user goes to the url.\n    When The user accepts the cookie on the page.\n    And User clicks the login button\n    And The user enters the e-mail address registered in the system for e-mail otp.\n    And The user enters the password registered in the system for e-mail otp.\n    And The user clicks the login button.\n    And Users enters mail verification code\n    And Clicks the Send button\n    And User clicks phone add button\n    And User clicks skip button\n    And User clicks on the search transaction pair box on the opened page\n    And Type the cryptocurrency to swap into the search box\n    And The user clicks on the cryptocurrency to trade.\n    And The user clicks on the dropdown in the swap section of the cryptocurrency detail page.\n    And The user selects USDT from the box at the top of the cryptocurrency list\n    And User types BTC in the asset search box\n    And User clicks on BTC-USTD swap in the incoming table\n    Then The user verifies that the trading pairs to be swapped are BTC-USDT\n    When The user enters the amount of money they want to exchange into the calculator\n    Then The user verifies that the amount entered in the calculator is displayed\n    And The user validates the value of the approximate amount they want to swap using the approximate price information displayed on the ui\n    Then User confirms that the buy text is clickable\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature b/target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature
--- a/target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature	(revision 35c8566a8eaa05ca90a70ee9eb2e412b1fb3cc24)
+++ b/target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature	(date 1734285125494)
@@ -1,5 +1,5 @@
 @swap
-Feature:Validate that a swap of USDT to BTC is executed successfully, with real-time rates displayed before confirmation
+Feature:Validate with e-mail otp that a swap of USDT to BTC is executed successfully, with real-time rates displayed before confirmation
   Scenario:Swap of USDT to BTC
     Given The user goes to the url.
     When The user accepts the cookie on the page.
@@ -24,6 +24,7 @@
     And The user validates the value of the approximate amount they want to swap using the approximate price information displayed on the ui
     Then User confirms that the buy text is clickable
 
+#
 
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"13bde2d8-b45d-4e3c-9383-80625e3961ab\" name=\"Changes\" comment=\"Dec\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Tokens/ReceiveTokens/StoredCredential\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Tokens/ReceiveTokens/StoredCredential\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/configuration.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/configuration.properties\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/logs/browserstack-plugin.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logs/browserstack-plugin.log\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/bilira/step_definitions/Swap_StepDefinitions.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/bilira/step_definitions/Swap_StepDefinitions.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/resources/Swap_100_USDT_to_BTC_MailOtp.feature\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/resources/Swap_100_USDT_to_BTC_MailOtp.feature\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/bilira/step_definitions/Swap_StepDefinitions.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/bilira/step_definitions/Swap_StepDefinitions.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExportToHTMLSettings\">\n    <option name=\"OUTPUT_DIRECTORY\" value=\"$PROJECT_DIR$/exportToHTML\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;livdemirci&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/yusufaltunok/Bilira.git&quot;,\n    &quot;accountId&quot;: &quot;db863b0d-0192-4b35-810c-afa6e1c53b68&quot;\n  }\n}</component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"useMavenConfig\" value=\"false\" />\n        <option name=\"userSettingsFile\" value=\"$USER_HOME$/.m2/settings.xml\" />\n      </MavenGeneralSettings>\n    </option>\n    <option name=\"importingSettings\">\n      <MavenImportingSettings>\n        <option name=\"downloadAnnotationsAutomatically\" value=\"true\" />\n        <option name=\"downloadDocsAutomatically\" value=\"true\" />\n        <option name=\"downloadSourcesAutomatically\" value=\"true\" />\n      </MavenImportingSettings>\n    </option>\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"DEPENDENCY_CHECKER_PROBLEMS_TAB\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 4\n}</component>\n  <component name=\"ProjectId\" id=\"2q2brqWO8XpMeBSNZ6uBn6l2maB\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.GMailer.executor&quot;: &quot;Run&quot;,\n    &quot;Application.GetMail.executor&quot;: &quot;Run&quot;,\n    &quot;Application.GmailApi.executor&quot;: &quot;Run&quot;,\n    &quot;Application.GmailQuickstart (1).executor&quot;: &quot;Run&quot;,\n    &quot;Application.GmailQuickstart.executor&quot;: &quot;Run&quot;,\n    &quot;Application.ManuelMail.executor&quot;: &quot;Run&quot;,\n    &quot;Cucumber Java.Feature: Swap_100_USDT_to_BTC.executor&quot;: &quot;Run&quot;,\n    &quot;Cucumber Java.Feature: Swap_100_USDT_to_BTC_MailOtp.executor&quot;: &quot;Run&quot;,\n    &quot;Cucumber Java.Scenario: Swap of USDT to BTC.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.Otp.testExample.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.Runner.executor&quot;: &quot;Run&quot;,\n    &quot;Maven.Bilira [clean].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.Bilira [compile].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.Bilira [test].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.Bilira [validate].executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;livde&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/home/livde/IdeaProjects/Bilira/src/test/resources&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/test/resources\" />\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Cucumber Java.Feature: Swap_100_USDT_to_BTC_MailOtp\">\n    <configuration name=\"GmailQuickstart (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"GmailQuickstart\" />\n      <module name=\"Bilira\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"GmailQuickstart\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"bilira.utilities.GmailQuickstart\" />\n      <module name=\"Bilira\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"bilira.utilities.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"ManuelMail\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"bilira.utilities.ManuelMail\" />\n      <module name=\"Bilira\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"bilira.utilities.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Feature: Swap_100_USDT_to_BTC\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/resources/Swap_100_USDT_to_BTC.feature\" />\n      <option name=\"GLUE\" value=\"bilira.step_definitions bilira.hooks\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\n      <module name=\"Bilira\" />\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter\" />\n      <option name=\"SUGGESTED_NAME\" value=\"Feature: Swap_100_USDT_to_BTC\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Feature: Swap_100_USDT_to_BTC_MailOtp\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/resources/Swap_100_USDT_to_BTC_MailOtp.feature\" />\n      <option name=\"GLUE\" value=\"bilira.step_definitions bilira.hooks\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\n      <module name=\"Bilira\" />\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter\" />\n      <option name=\"SUGGESTED_NAME\" value=\"Feature: Swap_100_USDT_to_BTC_MailOtp\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Cucumber Java.Feature: Swap_100_USDT_to_BTC_MailOtp\" />\n        <item itemvalue=\"Cucumber Java.Feature: Swap_100_USDT_to_BTC\" />\n        <item itemvalue=\"Application.ManuelMail\" />\n        <item itemvalue=\"Application.GmailQuickstart (1)\" />\n        <item itemvalue=\"Application.GmailQuickstart\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"13bde2d8-b45d-4e3c-9383-80625e3961ab\" name=\"Changes\" comment=\"\" />\n      <created>1733863818717</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1733863818717</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Dec\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733947831773</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733947831773</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"first\" />\n    <MESSAGE value=\"Dec\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Dec\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 35c8566a8eaa05ca90a70ee9eb2e412b1fb3cc24)
+++ b/.idea/workspace.xml	(date 1734289914753)
@@ -8,11 +8,14 @@
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Tokens/ReceiveTokens/StoredCredential" beforeDir="false" afterPath="$PROJECT_DIR$/Tokens/ReceiveTokens/StoredCredential" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/configuration.properties" beforeDir="false" afterPath="$PROJECT_DIR$/configuration.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logs/browserstack-plugin.log" beforeDir="false" afterPath="$PROJECT_DIR$/logs/browserstack-plugin.log" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/bilira/step_definitions/Swap_StepDefinitions.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/bilira/step_definitions/Swap_StepDefinitions.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/resources/Swap_100_USDT_to_BTC_MailOtp.feature" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/resources/Swap_100_USDT_to_BTC_MailOtp.feature" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/bilira/utilities/GmailQuickstart.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/bilira/utilities/GmailQuickstart.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/bilira/utilities/ManuelMail.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/bilira/utilities/ManuelMail.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/resources/mustafa.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/resources/mustafa.json" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/Swap_100_USDT_to_BTC_MailOtp.feature" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/test-classes/bilira/step_definitions/Swap_StepDefinitions.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/bilira/step_definitions/Swap_StepDefinitions.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/test-classes/bilira/utilities/GmailQuickstart.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/bilira/utilities/GmailQuickstart.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/test-classes/bilira/utilities/ManuelMail.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/bilira/utilities/ManuelMail.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -183,8 +186,8 @@
     <recent_temporary>
       <list>
         <item itemvalue="Cucumber Java.Feature: Swap_100_USDT_to_BTC_MailOtp" />
-        <item itemvalue="Cucumber Java.Feature: Swap_100_USDT_to_BTC" />
         <item itemvalue="Application.ManuelMail" />
+        <item itemvalue="Cucumber Java.Feature: Swap_100_USDT_to_BTC" />
         <item itemvalue="Application.GmailQuickstart (1)" />
         <item itemvalue="Application.GmailQuickstart" />
       </list>
